#!/bin/bash

# Здесь будут перечислены все типы сессий, которые могут быть. 
# Отчличаются только рабочие окружения и некоторые нюансы

function create_sess_poetry {
	function session_tmux_new_1 {
	tmux kill-session -t $project_name # На всякий случай убьем сессию, если она существует
	tmux new -s $project_name -n vim -d # Создаем tmux-сессию с названием нашего выбранного проекта, называем первое окно vim и сразу отключаемся от проекта оставляя его работать как сервер
	# Создаем новое окно 2 рабочего стола - 2:1 и называем его develop
	tmux new-window -n develop -t $project_name 
	# Создаем новое окно 3 рабочего стола - 3:1 и называем его develop
	tmux new-window -n info -t $project_name 
	# Делим окна 
	# Для рабочего стола 1
	tmux send-keys -t $project_name:1.1 'poetry shell' Enter #Подключаем poetry
	# Для рабочего стола 2
	tmux split-window -h -t $project_name:2.1 #Разбивам окно 2 рабочего окна
	tmux split-window -v -t $project_name:2.2 #Разбивам окно 2 рабочего окна
	# Для рабочего стола 3
	tmux split-window -h -t $project_name:3.1 #Разбивам окно 3 рабочего окна
	tmux split-window -v -t $project_name:3.2 #Разбивам окно 3 рабочего окна
	# Записываем, что хотим открыть в этих окнах	
	# Первый рабочий стол
	# Второй рабочий стол
	tmux send-keys -t $project_name:2.1 'poetry shell' Enter # Здесь будет эмулятор терминала c включенным poetry окружением
	tmux send-keys -t $project_name:2.2 'poetry shell' Enter # Запускаем poetry среду и включаем ее python
	tmux send-keys -t $project_name:2.3 'htop' Enter # В верхней панели запускаем htop
	# Третий рабочий стол
	tmux send-keys -t $project_name:3.1 'cd info/ && cat git_pass.md' Enter # Enter here the folder that contains the git info file
	tmux send-keys -t $project_name:3.2  # Место пока свободно, можно вывести подсказки
	tmux send-keys -t $project_name:3.3  # Место пока свободно, можно вывести подсказки
	tmux select-window -t $project_name:1.1 # Переводим курсор на окно 1
	}
	function session_tmux_new_2 { # Здесь перечисленны запуски того, что выключается после poetry shell
	tmux send-keys -t $project_name:1.1 'vim' Enter # На всю панель включаем vim (потом сделать программу выбора сессий)
	tmux send-keys -t $project_name:2.2 'python3' Enter # Запускаем poetry среду и включаем ее python
	}
	session_tmux_new_1
	sleep 3
	session_tmux_new_2
	sleep 1
	tmux attach-session -t $project_name # Подключаемся к сессии, после завершения всех настроек
}

# ===========================================================================
# ===========================================================================
# ===========================================================================

# Запуск проекта с рабочим окружением virtualenv
function create_sess_virtualenv {
	function session_tmux_new_1 {
	tmux kill-session -t $project_name # На всякий случай убьем сессию, если она существует
	tmux new -s $project_name -n vim -d # Создаем tmux-сессию с названием нашего выбранного проекта, называем первое окно vim и сразу отключаемся от проекта оставляя его работать как сервер
	# Создаем новое окно 2 рабочего стола - 2:1 и называем его develop
	tmux new-window -n develop -t $project_name 
	# Создаем новое окно 3 рабочего стола - 3:1 и называем его develop
	tmux new-window -n info -t $project_name 
	# Делим окна 
	# Для рабочего стола 1
	tmux send-keys -t $project_name:1.1 'vim' Enter # Здесь надо будет вклчить сессию вим!!!
	# Для рабочего стола 2
	tmux split-window -h -t $project_name:2.1 #Разбивам окно 2 рабочего окна
	tmux split-window -v -t $project_name:2.2 #Разбивам окно 2 рабочего окна
	# Для рабочего стола 3
	tmux split-window -h -t $project_name:3.1 #Разбивам окно 3 рабочего окна
	tmux split-window -v -t $project_name:3.2 #Разбивам окно 3 рабочего окна
	# Записываем, что хотим открыть в этих окнах	
	# Первый рабочий стол
	# Второй рабочий стол
	tmux send-keys -t $project_name:2.1 'source bin/activate' Enter # Здесь будет эмулятор терминала c включенным poetry окружением
	tmux send-keys -t $project_name:2.2  # Место пока свободно
	tmux send-keys -t $project_name:2.3 'htop' Enter # В верхней панели запускаем htop
	# Третий рабочий стол
	tmux send-keys -t $project_name:3.1 'cd info/ && cat git_pass.md' Enter # Enter here the folder that contains the git info file
	tmux send-keys -t $project_name:3.2  # Место пока свободно, можно вывести подсказки
	tmux send-keys -t $project_name:3.3  # Место пока свободно, можно вывести подсказки
	tmux select-window -t $project_name:1.1 # Переводим курсор на окно 1
	}
	function session_tmux_new_2 { # Здесь перечисленны запуски того, что выключается после poetry shell
	tmux send-keys -t $project_name:2.1 'make serve' Enter # Запускаем генрацию контента сайта на http://localhost:8000/
	}
	session_tmux_new_1
	sleep 3
	session_tmux_new_2
	sleep 1
	tmux attach-session -t $project_name # Подключаемся к сессии, после завершения всех настроек
}

# ===========================================================================
# ===========================================================================
# ===========================================================================

# Рабочее окружение для разработки сайта на pelican
function create_sess_virtualenv_pelican {
	function session_tmux_new_1 {
	tmux kill-session -t $project_name # На всякий случай убьем сессию, если она существует
	tmux new -s $project_name -n vim -d # Создаем tmux-сессию с названием нашего выбранного проекта, называем первое окно vim и сразу отключаемся от проекта оставляя его работать как сервер
	# Создаем новое окно 2 рабочего стола - 2:1 и называем его develop
	tmux new-window -n develop -t $project_name 
	# Создаем новое окно 3 рабочего стола - 3:1 и называем его develop
	tmux new-window -n info -t $project_name 
	# Делим окна 
	# Для рабочего стола 1
	tmux send-keys -t $project_name:1.1 'vim' Enter # Здесь надо будет вклчить сессию вим!!!
	# Для рабочего стола 2
	tmux split-window -h -t $project_name:2.1 #Разбивам окно 2 рабочего окна
	tmux split-window -v -t $project_name:2.2 #Разбивам окно 2 рабочего окна
	# Для рабочего стола 3
	tmux split-window -h -t $project_name:3.1 #Разбивам окно 3 рабочего окна
	tmux split-window -v -t $project_name:3.2 #Разбивам окно 3 рабочего окна
	# Записываем, что хотим открыть в этих окнах	
	# Первый рабочий стол
	# Второй рабочий стол
	tmux send-keys -t $project_name:2.1 'source bin/activate' Enter # Здесь будет эмулятор терминала c включенным poetry окружением
	tmux send-keys -t $project_name:2.2  # Место пока свободно
	tmux send-keys -t $project_name:2.3 'htop' Enter # В верхней панели запускаем htop
	# Третий рабочий стол
	tmux send-keys -t $project_name:3.1 'cd info/ && cat git_pass.md' Enter # Enter here the folder that contains the git info file
	tmux send-keys -t $project_name:3.2  # Место пока свободно, можно вывести подсказки
	tmux send-keys -t $project_name:3.3  # Место пока свободно, можно вывести подсказки
	tmux select-window -t $project_name:1.1 # Переводим курсор на окно 1
	}
	function session_tmux_new_2 { # Здесь перечисленны запуски того, что выключается после poetry shell
	tmux send-keys -t $project_name:2.1 'make serve' Enter # Запускаем генрацию контента сайта на http://localhost:8000/
	}
	session_tmux_new_1
	sleep 3
	session_tmux_new_2
	sleep 1
	tmux attach-session -t $project_name # Подключаемся к сессии, после завершения всех настроек
}


# ===========================================================================
# ===========================================================================
# ===========================================================================

# Рабочее окружение для создания bash-скриптов
function create_sess_bash {
	:
}
